-- schema.sql - Compatível com as Models

-- Tabela users (já está correta)
CREATE TABLE IF NOT EXISTS users (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    EMAIL VARCHAR(255) NOT NULL UNIQUE,
    NAME VARCHAR(255) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    ROLE VARCHAR(255) NOT NULL
);

-- Tabela adress (corrigida conforme model Adress)
CREATE TABLE IF NOT EXISTS adress (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    STREET VARCHAR(100) NOT NULL,
    NUMBER VARCHAR(255) NOT NULL,
    NEIGHBORHOOD VARCHAR(255) NOT NULL,
    CITY VARCHAR(100) NOT NULL,
    STATE VARCHAR(100) NOT NULL,
    ZIP_CODE VARCHAR(255) NOT NULL,
    COMPLEMENT VARCHAR(50),
    ID_PATIO BIGINT,
    CONSTRAINT FK_ADRESS_PATIO FOREIGN KEY (ID_PATIO) REFERENCES patio(ID)
);

-- Tabela area (corrigida conforme model Area)
CREATE TABLE IF NOT EXISTS area (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL
);

-- Tabela motorcycle (corrigida conforme model Motorcycle)
CREATE TABLE IF NOT EXISTS motorcycle (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    PLATE VARCHAR(255),
    COLOR VARCHAR(255) NOT NULL,
    MODEL TINYINT NOT NULL CHECK (MODEL BETWEEN 0 AND 2),
    STATUS TINYINT NOT NULL CHECK (STATUS BETWEEN 0 AND 2),
    AREA_ID BIGINT,
    CONSTRAINT FK_MOTORCYCLE_AREA FOREIGN KEY (AREA_ID) REFERENCES area(ID)
);

-- Tabela patio (corrigida conforme model Patio)
CREATE TABLE IF NOT EXISTS patio (
    ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    ADRESS_ID BIGINT UNIQUE,
    USER_ID BIGINT,
    CONSTRAINT FK_PATIO_ADRESS FOREIGN KEY (ADRESS_ID) REFERENCES adress(ID),
    CONSTRAINT FK_PATIO_USER FOREIGN KEY (USER_ID) REFERENCES users(ID)
);

-- Tabelas de relacionamento Many-to-Many

-- Relacionamento patio_areas (Patio <-> Area)
CREATE TABLE IF NOT EXISTS patio_areas (
    PATIO_ID BIGINT NOT NULL,
    AREAS_ID BIGINT NOT NULL,
    PRIMARY KEY (PATIO_ID, AREAS_ID),
    CONSTRAINT FK_PATIO_AREAS_PATIO FOREIGN KEY (PATIO_ID) REFERENCES patio(ID),
    CONSTRAINT FK_PATIO_AREAS_AREA FOREIGN KEY (AREAS_ID) REFERENCES area(ID)
);

-- Relacionamento area_motorcycles (Area <-> Motorcycle)
CREATE TABLE IF NOT EXISTS area_motorcycles (
    AREA_ID BIGINT NOT NULL,
    MOTORCYCLES_ID BIGINT NOT NULL UNIQUE,
    PRIMARY KEY (AREA_ID, MOTORCYCLES_ID),
    CONSTRAINT FK_AREA_MOTORCYCLES_AREA FOREIGN KEY (AREA_ID) REFERENCES area(ID),
    CONSTRAINT FK_AREA_MOTORCYCLES_MOTORCYCLE FOREIGN KEY (MOTORCYCLES_ID) REFERENCES motorcycle(ID)
);

-- Relacionamento users_patios (User <-> Patio)
CREATE TABLE IF NOT EXISTS users_patios (
    USER_ID BIGINT NOT NULL,
    PATIOS_ID BIGINT NOT NULL UNIQUE,
    PRIMARY KEY (USER_ID, PATIOS_ID),
    CONSTRAINT FK_USERS_PATIOS_USER FOREIGN KEY (USER_ID) REFERENCES users(ID),
    CONSTRAINT FK_USERS_PATIOS_PATIO FOREIGN KEY (PATIOS_ID) REFERENCES patio(ID)
);